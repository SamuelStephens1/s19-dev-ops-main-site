---
const today = new Date();

const COMPANY_NAME = "Signal Development Operations, LLC";
const ADDRESS_TEXT = "335 N. Peachtree Ave, Cookeville, TN 38501";
const PHONE_DISPLAY = "(931) 536-2227";
const PHONE_TEL = "+19315362227";
const EMAIL = "s19devops@outlook.com";

const mapSrc = `https://www.google.com/maps?q=${encodeURIComponent(ADDRESS_TEXT)}&output=embed`;
const directionsHref = `https://www.google.com/maps/dir/?api=1&destination=${encodeURIComponent(ADDRESS_TEXT)}`;
---

<footer class="footer">
  <div class="wrap">
    <div class="grid">
      <!-- Contact -->
      <section class="card">
        <h3>Contact Us</h3>

        <!-- Keep action/method for graceful fallback, but JS intercepts it -->
        <form id="contactForm" method="POST" action="/api/contact" class="form" novalidate>
          <input type="text" name="name" placeholder="Your name" required />
          <input type="email" name="email" placeholder="Work email" required />
          <textarea name="message" rows="4" placeholder="How can we help?" required></textarea>

          <!-- Honeypot -->
          <input type="text" name="company_website" tabindex="-1" autocomplete="off" class="hp" />

          <button type="submit" class="btn">Send Message</button>
          <div id="contactStatus" class="status" role="status" aria-live="polite" hidden></div>
        </form>
      </section>

      <!-- Info -->
      <section class="card card--tight">
        <h3>Our Info</h3>
        <p><strong>{COMPANY_NAME}</strong></p>
        <p>{ADDRESS_TEXT}</p>

        <p class="muted"><strong>Hours</strong></p>
        <ul class="hours">
          <li>Mon–Fri: 9:00 AM – 6:00 PM</li>
          <li>Sat: By appointment</li>
          <li>Sun: Closed</li>
        </ul>

        <p><strong>Phone:</strong> <a href={`tel:${PHONE_TEL}`}>{PHONE_DISPLAY}</a></p>
        <p><strong>Email:</strong> <a href={`mailto:${EMAIL}`}>{EMAIL}</a></p>
      </section>

      <!-- Map -->
      <section class="card">
        <h3>Find Us</h3>
        <div class="map">
          <iframe
            src={mapSrc}
            allowfullscreen
            loading="lazy"
            decoding="async"
            width="400"
            height="400"
            referrerpolicy="no-referrer-when-downgrade"
            title="Map"
            fetchpriority="low"
          ></iframe>
        </div>
        <a class="link" href={directionsHref} target="_blank" rel="noopener noreferrer">Get Directions</a>
      </section>
    </div>

    <div class="bottom">
      <p>© {today.getFullYear()} {COMPANY_NAME}. All rights reserved.</p>
      <div class="social">
        <a href="https://linkedin.com/company/yourfirm" target="_blank" rel="noopener">LinkedIn</a>
      </div>
    </div>
  </div>
</footer>

<style>
  .footer{background:#f9fafb;color:#334155}
  .wrap{max-width:1200px;margin:0 auto;padding:2rem 1rem}

  .grid{
    display:grid;gap:1.25rem;
    grid-template-columns:repeat(3,1fr);
  }
  @media (max-width:900px){ .grid{grid-template-columns:1fr} }

  .card{
    background:#fff;border:1px solid #e5e7eb;border-radius:12px;
    padding:1rem 1.25rem; box-shadow:0 2px 4px rgba(0,0,0,.05);
    text-align:center;
  }
  .card--tight p{ margin:.3rem 0; }
  .card h3{margin:.25rem 0 .6rem; font-size:1.1rem; color:#0f172a}

  /* Contact form */
  .form{display:flex;flex-direction:column;gap:.55rem; align-items:center}
  .form input,.form textarea{
    width:100%;border:1px solid #e5e7eb;border-radius:8px;
    padding:.6rem;font-size:.95rem;
  }
  .form .hp{display:none}
  .btn{
    background:#1d4ed8;color:#fff;border:0;padding:.6rem .9rem;border-radius:8px;
    font-weight:700;cursor:pointer;min-width:10rem
  }
  .btn:hover{background:#1e40af}
  .btn[disabled]{opacity:.6;cursor:not-allowed}

  /* Inline status message */
  .status{margin-top:.5rem;padding:.45rem .6rem;border-radius:8px;font-size:.92rem;
    background:#f3f4f6;color:#374151;border:1px solid #e5e7eb}
  .status.ok{background:#ecfdf5;color:#065f46;border-color:#a7f3d0}
  .status.err{background:#fef2f2;color:#991b1b;border-color:#fecaca}

  /* Hours */
  .hours{list-style-position:inside;padding:0;margin:.25rem 0 .6rem;}
  .hours li{margin:.15rem 0}

  .link{color:#1d4ed8;text-decoration:none;margin-top:.4rem;display:inline-block}
  .link:hover{text-decoration:underline}

  .map{width:100%;aspect-ratio:1/1;border-radius:10px;overflow:hidden;margin-bottom:.4rem}
  .map iframe{width:100%;height:100%;border:0}

  .bottom{
    margin-top:1.5rem;padding-top:1rem;border-top:1px solid #e5e7eb;
    display:flex;justify-content:space-between;align-items:center;font-size:.9rem;
  }
  @media (max-width:600px){ .bottom{flex-direction:column;text-align:center;gap:.5rem} }
  .social{display:flex;gap:.75rem}
  .social a{color:#334155;text-decoration:none}
  .social a:hover{text-decoration:underline}
</style>

<!-- Intercept submit; stay on page; show “sent” or error -->
<script is:inline>
  (() => {
    const form = document.getElementById('contactForm');
    if (!form) return;

    const statusEl = document.getElementById('contactStatus');
    const submitBtn = form.querySelector('button[type="submit"]');
    const originalText = submitBtn.textContent;

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      statusEl.hidden = false;
      statusEl.className = 'status';
      statusEl.textContent = 'Sending…';
      submitBtn.disabled = true;
      submitBtn.textContent = 'Sending…';

      try {
        const fd = new FormData(form);
        const res = await fetch(form.action, {
          method: 'POST',
          body: fd,
          headers: { 'Accept': 'application/json' }
        });

        const raw = await res.text();
        let data = {};
        try { data = JSON.parse(raw); } catch {}

        if (res.ok && data && data.ok) {
          statusEl.classList.add('ok');
          statusEl.textContent = 'Thanks! Your message was sent.';
          form.reset();
        } else {
          statusEl.classList.add('err');
          const msg = (data && (data.error || data.message)) ? String(data.error || data.message) : `Error ${res.status}`;
          statusEl.textContent = 'Could not send: ' + msg;
        }
      } catch (err) {
        statusEl.classList.add('err');
        statusEl.textContent = 'Network error. Please try again.';
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = originalText;
      }
    });
  })();
</script>
