---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

interface Props {
  title: string;
  description?: string;
  pubDate: Date;
  author?: string;
  tags?: string[];
  heroImage?: string;
}

const { title, description, pubDate, author, tags = [], heroImage } = Astro.props;
const pageTitle = `${title} • Signal DevOps`;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={pageTitle} description={description ?? ''} />
    <style>
      :root {
        --ink: #0f172a;
        --muted: #64748b;
        --accent: #1d4ed8;
        --line: rgba(15, 23, 42, .12);
        --bg-soft: #f8fafc;
      }

      main { padding: 28px 20px 56px; background: var(--bg-soft); }
      .wrap { margin: 0 auto; max-width: 1120px; }

      /* Back link */
      .back {
        display: inline-flex;
        align-items: center;
        gap: .4rem;
        font-size: .9rem;
        font-weight: 600;
        color: var(--accent);
        text-decoration: none;
        padding: .4rem .7rem;
        border-radius: 8px;
        background: #fff;
        border: 1px solid var(--line);
        box-shadow: 0 1px 2px rgba(0,0,0,.05);
        transition: background .15s ease;
      }
      .back:hover { background: #f0f9ff; }

      .hero { margin-top: 1rem; border-radius: 16px; overflow: hidden; box-shadow: 0 12px 24px rgba(0,0,0,.08); }
      .hero img { display: block; width: 100%; aspect-ratio: 16/9; object-fit: cover; }

      .header { margin: 22px auto 10px; max-width: 800px; text-align: center; }
      .title { margin: 0; font-size: clamp(1.8rem, 2.4vw + 1rem, 2.6rem); font-weight: 800; color: var(--ink); }
      .dek { margin: 10px auto 0; color: var(--muted); font-size: 1.05rem; max-width: 65ch; }
      .meta { margin-top: 12px; color: var(--muted); font-size: .95rem; display: flex; gap: 10px; justify-content: center; flex-wrap: wrap; }
      .dot::before { content: "•"; margin: 0 .4ch; color: var(--muted); }
      .tags { margin-top: 14px; display: flex; gap: .4rem; justify-content: center; flex-wrap: wrap; }
      .tag { font-size: .75rem; font-weight: 700; padding: .25rem .6rem; border-radius: 999px; border: 1px solid var(--line); color: #334155; background: #fff; }

      article { margin: 26px auto 0; max-width: 800px; padding: 22px 22px 28px; border-radius: 16px; background: #fff; box-shadow: 0 1px 2px rgba(0,0,0,.05), 0 8px 24px rgba(0,0,0,.06); }
      .prose { font-size: 1.05rem; line-height: 1.75; color: var(--ink); }
      .post-end { margin-top: 26px; padding-top: 18px; border-top: 1px dashed var(--line); color: var(--muted); font-size: .95rem; text-align: center; }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <div class="wrap">
        <!-- Back button -->
        <a href="/blog/" class="back" aria-label="Back to blog">
          ← Back to Blog
        </a>

        {heroImage && (
          <div class="hero">
            <img src={heroImage} alt="" />
          </div>
        )}

        <header class="header">
          <h1 class="title">{title}</h1>
          {description && <p class="dek">{description}</p>}
          <p class="meta">
            <span><FormattedDate date={pubDate} /></span>
            {author && <span class="dot">{author}</span>}
          </p>
          {tags.length > 0 && (
            <div class="tags">
              {tags.slice(0, 8).map((t) => <span class="tag">{t}</span>)}
            </div>
          )}
        </header>

        <article class="prose">
          <slot />
          <div class="post-end">Thanks for reading.</div>
        </article>
      </div>
    </main>
    <Footer />
  </body>
</html>
